# -*- coding: utf-8 -*-
"""Noise_scheduler.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19rbIWqtJJRhyyktuvLvHr2VU26Pos02x
"""

import torch
import numpy as np
import matplotlib.pyplot as plt
from datasets_gen import get_mnist_,get_cifar10,img_visualizer
import math

Device=torch.device('cuda' if torch.cuda.is_available() else 'cpu')

def get_at(t,T=1000,mode="Cosine"):  
  if mode=="Linear":
    ut=1
    for i in range(t):
      curr_t=i/T
      ut=ut*(curr_t*0.9999+(1-curr_t)*0.98)
    return math.sqrt(ut),math.sqrt(1-ut)  
  elif mode=="Cosine":
      t=t/(T)
      ut=math.cos(1.57*t)
      sigmat=math.sin(1.57*t)
      return ut,sigmat 
  
def noise_scheduler(x0,epsilon_noise,t,T=1000,mode='Cosine'):
  ut,sigmat=get_at(t,T,mode)
  noise=epsilon_noise.to(Device)
  return x0*ut+noise*sigmat

